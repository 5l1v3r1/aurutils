#!/bin/bash
# aur-fetch-snapshot - retrieve build files using tar archives
set -o errexit
shopt -s nullglob
readonly argv0=fetch-snapshot
readonly startdir=$PWD
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

# XXX default to outputting logs to /dev/stdout
logdir=/dev/null

dl_stdin() {
    if type -P aria2c >/dev/null; then
        aria2c --stderr=true -i -
    else
        wget -i -
    fi
}

tar_no_mode_diff() {
    if [[ -d $2/${1%%.tar*} ]]; then
        # tar --compare returns 1 on any mismatch
        LC_MESSAGES=C tar -df "$1" -C "$2" | grep -Evq '(Mode|Uid|Gid)'
    else
        return 1
    fi
}

usage() {
    printf -- 'usage: %s [-L logdir]\n' "$argv0" >&2
    exit 1
}

trap_exit() {
    if [[ ! -o xtrace ]]; then
        rm -rf "$tmp"
    fi
}

while getopts :L: opt; do
    case $opt in
        L) logdir=$OPTARG ;;
        *) usage ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

tmp=$(mktemp -dt "$argv0".XXXXXXXX)
trap trap_exit EXIT

cd "$tmp"
dl_stdin

for a in ./*.tar.gz; do
    tar -kxf "$a"

    if [[ -d $logdir ]] && tar_no_mode_diff "$a" "$startdir"; then
        a=${a%%.tar.gz}

        diff -ur "$startdir/$a" "$a" | \
            tee -a "$logdir/$a".diff | diffstat -CKq -f3
    fi
    cp -af "${a%%.tar.gz}" "$startdir"
done

# vim: set et sw=4 sts=4 ft=sh:
