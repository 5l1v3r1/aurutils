#!/bin/bash
# aur-repo-filter - filter packages in the Arch Linux repositories
readonly argv0=repo-filter
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
readonly arch_json=https://www.archlinux.org/packages/search/json
readonly arch_repo=(core extra testing community{,-testing} multilib{,-testing})

# default options
mode=sync

# Unlike the jq function, this prints "None" in case of a missing entry.
# See: https://github.com/falconindy/expac/issues/23
provides() {
    expac '%n %R %S' -Sv - | awk '{
        for(i = 2; i <= NF; ++i)
            printf("%s %s\n", $1, $i)
    }'
}

tabulate() {
    jq -r '.results[]
        | .pkgname as $n | ([$n] + .replaces + .provides)[]? | [$n, .]
        | @tsv'
}

get_json() {
    wget "$arch_json/?q=" -O - --quiet
}

get_sync() {
    pacsift --sync --exact "$@" <&-
}

tr_ver() {
    sed -r 's/[<>=].*$//g'
}

usage() {
    printf >&2 'usage: %s [-o] [-d repo]\n' "$argv0"
    exit 1
}

source /usr/share/makepkg/util/message.sh
source /usr/share/makepkg/util/parseopts.sh

opt_short='od:'
opt_long=()
if ! parseopts "$opt_short" "${opt_long[@]}" -- "$@"; then
    usage
fi
set -- "${OPTRET[@]}"

unset argv_repo reposet
while true; do
    case "$1" in
        -d) shift; argv_repo+=("$1") ;;
        -o) mode=arch ;;
        --) shift; break;;
    esac
    shift
done
unset opt_short opt_long OPTRET

if [[ -v argv_repo ]]; then
    for i in "${argv_repo[@]}"; do
        reposet+=("--repo=$i")
    done
else
    for i in "${arch_repo[@]}"; do
        reposet+=("--repo=$i")
    done
fi

case $mode in
    sync) output() { get_sync "$@" | provides; } ;;
    arch) output() { get_json "$@" | tabulate | tr_ver; } ;;
esac

declare -A pkgset

while IFS= read -r; do
    pkgset[$REPLY]=1
done

if [[ -n ${pkgset[*]} ]]; then
    output "${reposet[@]}" | sort -u | while read -r pkg vrt; do
        pkg=${pkg#*/}

        if [[ ${pkgset[$pkg]} ]]; then
            printf '%s\n' "$pkg"
        elif [[ ${pkgset[$vrt]} ]]; then
            plain 'virtual dependency %s provided by %s\n' "$vrt" "$pkg"
            printf '%s\n' "$vrt"
        fi
    done
fi

# vim: set et sw=4 sts=4 ft=sh:
