#!/bin/bash
# aur-pkglist - print the AUR package list
set -o pipefail
readonly argv0=pkglist
readonly aur_location='https://aur.archlinux.org'
readonly cache=${XDG_CACHE_HOME:-$HOME/.cache}/aurutils/$argv0
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

# default options
delay=300
pkglist=packages
update=0

extract_date() {
    sed -n '1p' "$1" | awk -F', ' '{print $3}'
    sed -i '1d' "$1"
}

list_update() {
    if wget -O - -o last_transfer "$1" | gzip -d - > "$2"; then
        extract_date "$2"
    else
        printf >&2 'warning: failed to retrieve package list\n'
    fi
}

list_http_date() {
    if wget -S --spider -o last_transfer "$1"; then
        awk -F', ' '/Date:/ {print $2}' last_transfer
    else
        printf >&2 'warning: failed to retrieve HTTP date\n'
    fi
}

usage() {
    printf >&2 'usage: %s: [-bt] [-FP pattern]\n' "$argv0"
    exit 1
}

# default to any match
pcre_opt=('.*')

source /usr/share/makepkg/util/parseopts.sh

opt_short='F:P:bt'
opt_long=('pkgbase' 'fixed-strings' 'perl-regexp')
opt_hidden=('dump-options')

if ! parseopts "$opt_short" "${opt_long[@]}" "${opt_hidden[@]}" -- "$@"; then
    usage
fi
set -- "${OPTRET[@]}"

while true; do
    case "$1" in
        -b|--pkgbase) pkglist=pkgbase ;;
        -t) shift; delay=$1 ;;
        -F|--fixed-strings) shift; pcre_opt=('-e' "$1" '-F') ;;
        -P|--perl-regexp) shift; pcre_opt=('-e' "$1") ;;
        --dump-options) printf -- '--%s\n' "${opt_long[@]}" ;
                        printf -- '%s' "${opt_short}" | sed 's/.:\?/-&\n/g' ;
                        exit ;;
        --) shift; break ;;
    esac
    shift
done
unset opt_short opt_long OPTRET

mkdir -p     "$cache"
chmod -c 700 "$cache"
cd "$cache" || exit

if [[ -s $pkglist && -s timestamp ]]; then
    sec_l=$(date -f timestamp '+%s')
    sec_r=$(list_http_date "$aur_location/$pkglist.gz" | date -f - '+%s')

    if ((sec_l)) && ((sec_r)) && ((sec_r - sec_l > delay)); then
        update=1
    fi
else
    update=1
fi

if ((update)); then
    list_update "$aur_location/$pkglist.gz" "$pkglist" > timestamp
fi

pcregrep "${pcre_opt[@]}" < "$pkglist"

# vim: set et sw=4 sts=4 ft=sh:
