#!/bin/bash
# aur-fetch-git - retrieve build files using git
set -o errexit
readonly argv0=fetch-git
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

log_dir=/dev/null

merge_upstream() {
    git fetch -v

    if [[ $(git rev-parse HEAD) != $(git rev-parse '@{upstream}') ]]; then
        if [[ -d $log_dir ]]; then
            git --no-pager log --patch --stat '..@{upstream}' >> "$log_dir/$1.patch"
        fi

        git reset --hard HEAD
        git merge
    fi
}

usage() {
    printf -- 'usage: %s [-L log_dir]\n' "$argv0" >&2
    exit 1
}

while getopts :L: opt; do
    case $opt in
        L) log_dir=$OPTARG ;;
        *) usage ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

while IFS= read -r uri; do
    pkg=${uri##*/}   # strip path
    pkg=${pkg%%.git} # strip .git suffix

    if [[ -d $pkg/.git ]]; then
        # Avoid issues file system boundaries (#274)
        GIT_DIR="$pkg/.git" GIT_WORK_TREE="$pkg" merge_upstream "$pkg"
    else
        git clone "$uri"
    fi
done

# vim: set et sw=4 sts=4 ft=sh:
