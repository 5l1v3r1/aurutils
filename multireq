#!/bin/bash

readonly argv0=multireq

deps() {
    jshon -F "$1" -Qe results -a -e Depends -a -u
    jshon -F "$1" -Qe results -a -e MakeDepends -a -u
    jshon -F "$1" -Qe results -a -e CheckDepends -a -u
}

pair() {
    for ((i = 0; i < "$1"; ++i)); do
	awk 'NR == 1 { p = $1 } NR > 1 { print p, $0 }' \
	<(jshon -F "$2" -Qe results -e "$i" -e Name -upe Depends -a -u) \
	<(jshon -F "$2" -Qe results -e "$i" -e Name -upe MakeDepends -a -u) \
	<(jshon -F "$2" -Qe results -e "$i" -e Name -upe CheckDepends -a -u)
    done
}

url() {
    local str='https://aur.archlinux.org/rpc.php/rpc/?v=5&type=info'

    while read -r p; do
	str+="&arg[]=$p"
    done

    printf '%s' $str
}

# Dependency trees aren't visible from a single request, so we make requests sequentially.
query() {
    local start=$SECONDS

    if ! curl --retry 3 -sgL $(printf '%s\n' "$@" | tee copy | url) > raw_0; then
	error "Request failed"
	exit 1
    fi

    for ((a = 1; a <= 100; ++a)); do
	if ! curl --retry 3 -sgL $(deps raw_"$((--a))" | tee -a copy | url) > raw_$a; then
	    error "Request failed"
	    exit 1
	fi

	if [[ $(jshon -F raw_$a -Qe resultcount) == 0 ]]; then
	    break
	fi
    done

    if (( a > 100 )); then
	error "Total requests: $((++a)) (exceeded maximum)"
	exit 1
    else
	msg2 "Total requests: $((++a))"
	msg2 "Time: $((SECONDS - start)) seconds"
    fi
}

source /usr/share/makepkg/util.sh || exit 1

if ((!$#)); then
    error "no arguments"
    exit 1
fi

[[ -t 2 ]] && colorize

tmp=${TMPDIR:-/tmp}/$argv0-$UID
if mkdir -p "$tmp" -m 700; then
    output=$(mktemp -d XXXXXXXX -p "$tmp")
fi

cd "$output" || exit 1

msg 'Querying AUR RPC...'
query "$@"

msg 'Generating dependencies...'
if curl -sgL $(sort -u < copy | url) > raw_n; then
    pair "$(jshon -e resultcount < raw_n)" raw_n | tsort > all
    jshon -F raw_n -e results -a -e Name -u > aur
else
    error "Request failed"
    exit 1
fi

grep -Fxf aur all | tac
rm -rf "$output"
