#!/bin/bash
PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
set -o pipefail

cache="${XDG_CACHE_HOME:-$HOME/.cache}/aursearch"
aurweb="https://aur.archlinux.org"
rpc="$aurweb/rpc/?v=5&type=info"
tmp=$(mktemp -d) || exit

readonly cache remote rpc tmp

brief() {
    while {
	read -r Name
	read -r Version
	read -r NumVotes
	read -r Popularity
	read -r Description
    }; do
	printf 'aur/%s %s (%s, %s)\n    %s\n\n' "$Name" "$Version" "$NumVotes" "$Popularity" "$Description"
    done < <(jshon -C -a -e results -a -e Name -u -p -e Version -u -p -e NumVotes -u -p -e Popularity -u -p -e Description -u)
}

argsum() {
    cksum <<< "$1" | awk '{print $1}'
}

split() {
    awk -v rpc=$rpc '{
        # URL encode @ and +
        gsub("+","%2b"); gsub("@","%40");

        if (NR == 1 || (NR % 150) == 0)
            printf "\n%s&arg[]=%s", rpc, $0;
        else
            printf "&arg[]=%s", $0;
    }'
}

getjson() {
    aria2c -s 16 -x 16 -j 32 --log="$cache"/aria2c.log --log-level=info -q -i -
}

trap 'rm -rf "$tmp"' EXIT

source /usr/share/makepkg/util.sh || exit

if ((!$#)); then
    error "aursearch: pattern"
    exit 1
fi

[[ -t 2 ]] && colorize

cd "$tmp" || exit

msg "Retrieving package list"
if curl -sS "$remote"/packages.gz -o "$cache"/packages.gz -z "$cache"/packages.gz --create-dirs; then
    zcat "$cache"/packages.gz | awk '!/^#/' > "$cache"/packages

    msg 'Sending request'
    if grep -P -- "$1" "$cache"/packages | split | getjson; then
	# Merge to a single JSON structure.
	awk '{print}' ./index.html* | sed -e '1i[' -e '$!s/$/,/' -e '$a]' | brief
    fi
fi
