#!/bin/bash
PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
set -e -o pipefail

readonly aurweb=https://aur.archlinux.org

repofind() {
    declare repo
    declare -A rset

    for repo in $(pacconf --repo-list); do
	rset[$repo]=$(pacconf --single --repo="$repo" Server)

	if [[ ${rset[$repo]} =~ file:// ]]; then
	    printf '%s %s\n' "$repo" "${rset[$repo]}"
	fi
    done
}

reposelect() {
    #global target pool
    declare -A avail
    declare repo server
    
    while read -r repo server; do
	avail[$repo]=$server
    done < <(repofind)

    if [[ ! ${avail[@]} ]]; then
	error "No file:// repository found"
        exit 2
    elif ((${#avail[@]} > 1)); then
	select target in "${!avail[@]}"; do
	    break
	done
    else
	target=${!avail[*]}
    fi

    pool=${avail[$target]#file://}
    
    if [[ ! -d $pool ]] || [[ ! -w $pool ]]; then
	error "$pool: Directory is not writeable"
	exit 1
    fi

    msg2 "Using [$target] repository"
    printf '%s %s\n' "$target" "$pool"
}

quickcheck() {
    declare url="$aurweb/rpc.php/rpc/?v=5&type=info"
    declare pkg ver siftargs
    declare -A set_l set_r

    if (($#)); then
	for pkg; do args+=(--name="$pkg"); done
    fi

    if read -r target pool < <(reposelect); then
	while read -r pkg ver; do
	    set_l[$pkg]=$ver
	done < <(pacsift --repo="$target" "${args[@]}" | expac -S '%n %v' -)
    fi

    if [[ ! ${set_l[@]} ]]; then
	error "No packages available"
	exit
    fi
    
    for p in "${!set_l[@]}"; do
	url+="&arg[]=$p"
    done

    while read -r pkg ver; do
	set_r[$pkg]=$ver
    done < <(curl --retry 3 -sSgL "$url" | jshon -e results -a -e Name -u -p -e Version -u | xargs -n2)

    for p in "${!set_r[@]}"; do
	if (($(vercmp "${set_r[$p]}" "${set_l[$p]}") == 1)); then
	    printf '%s\n' "$p ${set_l[$p]} -> ${set_r[$p]}"
	fi
    done
}

source /usr/share/makepkg/util.sh

[[ -t 2 ]] && colorize

while getopts :isu OPT; do
    case $OPT in
	i|+i) repofind ;;
	s|+s) reposelect ;;
	u|+u) update=1 ;;	    
	*)    plain "usage: ${0##*/} [+-isu} [--] ARGS..."
	      exit 2 ;;
    esac
done
shift $(( OPTIND - 1 ))
OPTIND=1

if ((update)); then
    quickcheck "$@"
fi
