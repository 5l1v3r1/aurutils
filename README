AURUTILS(7)            Miscellaneous Information Manual            AURUTILS(7)



NNAAMMEE
       aurutils - helper tools for the arch user repository

PPRROOGGRRAAMMSS
       The  below gives a short overview; see the respective documentation for
       details.

       aurbuild
           Build packages to a local repository. Local or  nspawn  builds  are
           possible.

       aurchain
           Solve and order dependencies using the AUR RPC.

       aurcheck
           Check packages in a given repo for AUR updates.

       aurqueue
           Order dependencies using .SRCINFO files.

       aursearch
           Search AUR package names by a PCRE pattern.

       aursift
           Filter packages in the Arch Linux repositories.

       aursync
           Download and build AUR packages automatically.

       repofind
           Display information on file:// repositories.

       repoman
           Run pacman, only considering the official repositories.

EEXXIITT SSTTAATTUUSS
       Programs  follow a subset of errno(3), or preserve command status where
       applicable.

       See also EXIT STATUS in curl(1), aria2c(1).

NNOOTTEESS
       CCrreeaattiinngg aa llooccaall rreeppoossiittoorryy

       Configure the local repository in a separate pacman configuration,  for
       example in /etc/pacman.d/custom:

         [options]
         CacheDir = /var/cache/pacman/pkg/
         CacheDir = /var/cache/pacman/custom/
         CleanMethod = KeepCurrent

         [custom]
         SigLevel = Optional TrustAll
         Server = file:///home/custompkgs

       Avoid naming the repository _l_o_c_a_l, as this name is reserved by pacman.

       Include the configuration in _/_e_t_c_/_p_a_c_m_a_n_._c_o_n_f:

         # An example of a custom package repository.  See the pacman manpage for
         # tips on creating your own repositories.
         Include = /etc/pacman.d/custom

       Add _I_n_c_l_u_d_e to the eenndd of pacman.conf, where possible.

       Create directories for both database and built packages:

         $ sudo install -d /home/custompkgs /var/cache/pacman/custom/ -o $USER -m 700

       Create an empty database, and synchronize pacman:

         $ repo-add /home/custompkgs/custom.db.tar
         $ sudo pacman -Syu


       NNoottee:: When using _a_u_r_s_y_n_c_(_1_), the trailing directory of the cache path
             mmuusstt match the name of the local repository.

       TTiipp:: Consider separate repositories for different purposes, such as
            version control packages.

       MMoovviinngg tthhee ppaacckkaaggee ppooooll

       Move the built packages to the new pool:

         $ mv -v /home/custompkgs/*.pkg* /var/cache/pacman/custom/
         $ cd /home/custompkgs

       Rebuild the database:

         $ repose --rebuild -vf custom -p /var/cache/pacman/custom
         $ sudo pacman -Syu


       MMiiggrraattiinngg ffoorreeiiggnn ppaacckkaaggeess

       This  is straightforward if the built packages are still available, for
       example in /home/custompkgs:

         $ cd /home/custompkgs
         $ repose -fv custom
         $ sudo pacman -Syu

       To reverse this operation, repeat the procedure with _-_-_d_r_o_p:

         $ repose -dfv custom

       Without packages, check the installed files first. If  needed,  rebuild
       packages with _m_d_5_s_u_m mismatches.

         $ pacman -Qqm | paccheck --md5sum --quiet

       Recreate the packages, and save them to _P_K_G_D_E_S_T, or _P_W_D if not set:

        $ for b in $(pacman -Qqm); do bacman "$b"; done

       To  keep the repository updated when building with makepkg, set _P_K_G_D_E_S_T
       to the cache, and create a repose alias:

         $ sudoedit /etc/makepkg.conf
         $ alias custom='repose -vf custom -r /home/custompkgs -p /var/cache/pacman/custom'


EEXXAAMMPPLLEESS
       Run actions on AUR targets in total order:

         $ while read -r pkg _; do ... done < <(aurchain foobar)

       Build all packages in the _p_k_g_b_u_i_l_d_s github repository:

         $ git clone https://www.github.com/Earnestly/pkgbuilds
         $ cd pkgbuilds
         $ find -maxdepth 2 -name PKGBUILD -execdir mksrcinfo ;
         $ aurqueue * > queue # Remove unwanted targets
         $ aurbuild -d custom -r /home/custompkgs -p /var/cache/pacman/custom -a queue

       Search for Perl modules that are both in the AUR or official  reposito-
       ries:

         $ aursearch -q '^perl-.+' >pkgs
         $ grep -Fxvf <(aursift -S < pkgs) pkgs

       Build _p_l_a_s_m_a_-_d_e_s_k_t_o_p_-_g_i_t and its dependencies in an nspawn container:

         $ aursync -c plasma-desktop-git

       Download and view build files recursively for libunity:

         $ aursync -dv libunity

       Build all AUR updates in a selected repository:

         $ aursync -u

       Select a package that matches _p_o_n_y, and build the result:

         $ select a in $(aursearch -q pony); do aursync "$a"; break; done

       Print  AUR updates in the "custom" repository (output similar to check-
       updates):

         $ aurcheck

       Use helpers wich honor the PACMAN variable or cower with a repository:

        $ PACMAN=repoman pacaur -Syu --aur
        $ cower --ignorerepo=custom


       NNoottee:: Unlike repofind, these only check updates for installed packages.

BBUUGGSS
       Before filing a bug, check the following:

       1) Do you use the latest version of aurutils and its dependencies?

       2) Does the package conform to PKGBUILD(5) and the AUR  package  guide-
       lines?

       3)  Does the package provide the correct metadata on the AUR RPC inter-
       face?

       4) Does the package build with makepkg -s ?

       5) Is the problem reproducible, and not due to  a  misconfiguration  of
       pacman, makepkg, sudoers, gpg or others?

       If yes to all, create a debug log:

         $ bash -x scriptname |& tee error.log

       and      attach     it     to     a     new     issue     on     github
       <https://www.github.com/AladW/aurutils/issues>



AURUTILS                          2016-05-03                       AURUTILS(7)
