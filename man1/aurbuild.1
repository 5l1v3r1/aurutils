.TH AURBUILD 1 2016-08-18 AURUTILS
.SH NAME
aurbuild \- build packages to a local repository

.SH SYNOPSIS
.SY aurbuild
.OP \-cs
.OP \-a queue
.OP \-d database
.OP \-m machine
.OP \-p pool
.OP \-r root
.OP \--
.OP "makepkg args"
.YS

.SH DESCRIPTION
Build packages, adding the results to a local repository (usually
configured with a \fIfile:// \fRprefix \fRin \fIpacman.conf\fR).

It is assumed that build directories are located in the current
directory, and described in a text file which is taken as argument.

.SH OPTIONS
All arguments after -- are passed to \fImakepkg\fR, or
\fImakechrootpkg \fRwhen \fI-c \fRis specified.

.B \-a
.RS
A text file with directories containing a PKGBUILD.
.RE

.B \-c
.RS
Build packages with \fImakechrootpkg\fR.
.RE

.B \-d
.RS
The name of the database.
.RE

.B \-m
.RS
Set the machine name for the container.
.RE

.B \-r
.RS
The root for the repository where the database files will live. This
defaults to the \fIServer\fI value of the configured database.
.RE

.B \-p
.RS
The pool for the built packages. The \fBpool \fRis the location where
aurbuild will put the packages after building. This defaults to the
value of the repository root.
.RE

.B \-s
.RS
Sign built packages and the database with gpg.
.RE

.SH NOTES
When building locally (outside a container), \fIpacman -Syu \fR is run
while restricted to a local repository. This is comparable to \fImakepkg
-i\fR, but without subsequent package installation (if a package was
installed before, it is updated to the latest available version). An
interesting side-effect is that pacman considers packages inside the
official repositories "local", and warns if they are newer than any
custom counterpart.

Databases are built with \fILANG=C\fR to avoid libalpm from skipping
entries if the locale is not set. See FS#49342 for details.
.br
.UR https://bugs.archlinux.org/task/49342#comment147145
.UE

.SS Building with \fBmakechrootpkg\fR
The template ("root") container is upgraded with \fIpacman -Syu\fR
prior to building. This is done as the "user" container is restored to
the "root" container before each build (\fImakechrootpkg -c\fR).

Changes to the pacman database are \fBnot\fR propagated from the
container to the local system; packages must be installed and updated
separately, typically through \fIpacman -Syu <package_name>\fR.

Package conflicts inside the container must be solved manually, as
\fBmakechrootpkg\fR uses \fImakepkg --confirm -s\fR internally. For
example, to replace \fBgcc\fR with \fBgcc-multilib\fR, run \fIarch-nspawn
/var/lib/aurbuild/root pacman -S gcc-multilib\fR as root.

For signature verification to work, \fBgpg2\fR(1) configuration must be
stored in \fI~/.gnupg\fR. See Github issue #151 for details.

\fBmakechrootpkg\fR reads -DEST, PACKAGER and MAKEFLAGS from
/etc/makepkg.conf (and after that, ~/.makepkg.conf), \fBif\fR these
variables are unavailable in the environment.  Note that variables
specified on the sudo command line (such as \fIPKGDEST\fR by
\fBaurbuild\fR) depend on sudo policy; see \fBsudo\fR(8) and
\fBsudoers\fR(5).

.SH SEE ALSO
.BR pacconf (1),
.BR pacman (1),
.BR repofind (1),
.BR repose (1),
.BR makepkg.conf (5),
.BR pacman.conf (5),
.BR aurutils (7),
.BR makepkg (8)

.SH AUTHORS
.MT https://github.com/AladW
Alad Wenter
.ME

.\" vim: set textwidth=72:
