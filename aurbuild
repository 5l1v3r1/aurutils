#!/bin/bash
PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
set -e

readonly argv0=aurbuild
readonly pwd=$PWD

makepkg_args=(-Lscr --holdver)

build_local() {
    PKGDEST="$pool" LC_MESSAGES=C makepkg "${makepkg_args[@]}"
    repose -vf "$database" -r "$root" -p "$pool"

    sudo pacsync "${database%.*}"
    sudo pactrans --sysupgrade
}

build_chroot() {
    declare CHROOT=/var/lib/aurbuild

    if [[ ! -d $CHROOT/root ]]; then
	sudo mkdir -p "$CHROOT"
	sudo mkarchroot -C /etc/pacman.conf "$CHROOT"/root base base-devel
    fi

    sudo -E PKGDEST="$pool" makechrootpkg -d "$pool" -c -u -r "$CHROOT" -- --skippgpcheck
    repose -vf "$database" -r "$root" -p "$pool"
}

trap 'exit' INT

source /usr/share/makepkg/util.sh

[[ -t 2 ]] && colorize

while getopts  :cd:f:p:r:R OPT; do
    case $OPT in
	c|+c) build=build_chroot ;;
	d|+d) database="$OPTARG" ;;
	p|+p) pool="$OPTARG" 	 ;;
	r|+r) root="$OPTARG" 	 ;;
	R|+R) rebuild=1          ;;
	*) plain usage: "$argv0 [+-cd ARG] [+-f ARG] [+-p ARG] [+-r ARG] [+-R} [--] ARGS..."
	   exit 1 ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

if [[ ! $database ]] || [[ ! $pool ]] || [[ ! $root ]]; then
    error "Missing arguments (-d, -p, -r)"
    exit 1
fi

if [[ ! -f $1 ]]; then
    error "$1: No such file or directory"
    exit 2
fi

# Read from FD 3 to choose providers with makepkg (#21)
exec 3< "$1"

while read -r -u 3 p; do
    if cd "$pwd/$p"; then
	if ((rebuild)); then
	    setconf PKGBUILD pkgrel+=0.1
	    #setconf .SRCINFO pkgrel+=0.1
	fi
	"${build:-build_local}"
    fi
done

exec 3<&-

# vim: set sw=4 sts=4:
