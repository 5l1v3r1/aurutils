#!/bin/bash
readonly argv0=aurbuild
readonly pwd=$PWD

repofind() {
    #global target
    declare repo location rset

    while {
	read -r repo
	read -r _ _ location
    } do
	if [[ $location =~ ^file: ]]; then
	    repo=${repo%\]}
	    repo=${repo#\[}
	    rset+=("$repo")
	fi
    done < <(pacconf --single | awk '/^\[/ && !/options/ || /Server/')

    if [[ ${rset[@]} ]]; then
        if ((${#rset[@]} > 1)); then
            select target in "${rset[@]}"; do
                break
            done
        else
            target=$rset
        fi
        msg "Using [$target] repository"
    else
        error "No file:// repository found"
        exit 1
    fi
}

trap 'exit' INT

source /usr/share/makepkg/util.sh || exit 1
source /etc/makepkg.conf || exit 1

[[ -t 2 ]] && colorize

if [[ ! -d $PKGDEST ]]; then
    error "$PKGDEST: not a directory (PKGDEST)"
    exit 1
fi

repofind

# Read from fd 3 to not influence select and makepkg providers.
if [[ -r $1 ]]; then
    exec 3< "$1"
else
    error "$1: not readable (queue)"
    exit 1
fi

hash powerpill 2>/dev/null && cmd=powerpill

while read -r -u 3 pkg; do
    if cd "$pwd/$pkg"; then
	if PACMAN="${cmd:-pacman}" LC_MESSAGES=C makepkg -Lsc; then
	    if repose -vf "$target".db -r "$PKGDEST" -p "$PKGDEST"; then
		# https://github.com/AladW/aurutils/issues/19
		sudo pacsync "$target"
	    else
		error "$target: failed to update database"
		exit 1
	    fi
	else
	    error "$pkg: build failure"
	    exit 1
	fi
    fi
done

exec 3<&-

# vim: set sw=4 sts=4:
