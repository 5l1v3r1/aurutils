#!/bin/bash
PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

readonly argv0=aurbuild
readonly pwd=$PWD

build() {
    set -e    
    PKGDEST="$pool" LC_MESSAGES=C makepkg -Lsc
    repose -vf "$database" -r "$root" -p "$pool"
    sudo pacsync "${database%.*}"
    set +e
}

build_chroot() {
    declare CHROOT=/var/lib/aurbuild

    set -e
    if [[ ! -d $CHROOT/root ]]; then
	sudo mkdir -p "$CHROOT"
	sudo mkarchroot -C /etc/pacman.conf "$CHROOT"/root base base-devel
    fi

    sudo -E PKGDEST="$pool" makechrootpkg -d "$pool" -c -u -r "$CHROOT"
    repose -vf "$database" -r "$root" -p "$pool"
    set +e
}

trap 'exit' INT

source /usr/share/makepkg/util.sh || exit 1

[[ -t 2 ]] && colorize

while getopts :cd:p:r: OPT; do
    case $OPT in
	c|+c) devtools=1	 ;;
	d|+d) database="$OPTARG" ;;
	p|+p) pool="$OPTARG" 	 ;;
	r|+r) root="$OPTARG" 	 ;;
	*) plain "usage: $argv0 [+-cp ARG] [+-r ARG} [--] ARGS..."
	   exit 1 ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

if [[ ! -r $1 ]]; then
    error "$1: not readable (queue)"
    exit 1
fi

exec 3< "$1"

while read -r -u 3 p; do
    if cd "$pwd/$p"; then
	if ((devtools)); then
            build_chroot
	else
	    build
	fi
    fi
done

exec 3<&-

# vim: set sw=4 sts=4:
