#!/bin/bash
# shellcheck disable=SC2016
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
readonly argv0=aurqueue
set -o pipefail

findsrc() {
    find -- "$@" -maxdepth 1 -type f -name .SRCINFO -print0
}

dcat() {
    xargs -0 gawk 'BEGINFILE {
        print "STOP"
    } {
        print
    }'
}

deps() {
    gawk -v FS='[<=>]' '/STOP/ {
        read = 1
    } {
        if (read && $0 ~ /pkgbase/) {
            pb = $2
            printf("%s\t%s\n", pb, pb)
        }
        if (read && $0 ~ /^\t(make|check)?depends/) {
            printf("%s\t%s\n", pb, $2)
        }
        if ($0 ~ /^$/) {
            read = 0    # split package
        }
    }'
}

base() {
    gawk -v FS='[<=>]' '
    /pkgbase/ {
        pb = $2
    }
    /pkgname/ {
        printf("%s\t%s\n", $2, pb)
    }' "$1"
}

sub() {
    gawk 'NR == FNR {
        x[$1] = $2; next
    } {
        if ($1 in x && !(x[$1] in seen)) {
            print x[$1]; seen[x[$1]];
        }
    }' "$1" - 
}

trap_exit() {
    if [[ ! -o xtrace ]]; then
        rm -rf "$tmp"
    fi
}

source /usr/share/makepkg/util.sh || exit

if ((!$#)); then
    error "usage: $argv0 pkgbase [pkgbase...]"; exit 1
fi

tmp=$(mktemp -dt "$argv0".XXXXXXXX) || exit
trap 'trap_exit' EXIT

if [[ -t 2 ]]; then
    colorize
fi

findsrc "$@" | dcat | tee "$tmp"/info | deps > "$tmp"/deps

if hash datamash 2>/dev/null; then
    datamash -W check < "$tmp"/deps >/dev/null || exit
fi

tsort "$tmp"/deps | sub <(base "$tmp"/info) | grep -Fxf <(printf '%s\n' "$@") | tac

# vim: set et sw=4 sts=4 ft=sh:
