#!/bin/bash
# aurqueue - generate ordered dependency lists for package builds
PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
set -o pipefail

argv0=aurqueue
tmp=$(mktemp -dt "$argv0".XXXXXXXXXX) || exit

# Determine the path to each .SRCINFO, output to stdout using null
# delimitation to prevent ARG_MAX issues.
findsrc() {
    find -- "$@" -maxdepth 1 -type f -name .SRCINFO -print0
}

# Use xargs to pass a list of paths to .SRCINFOs for processing, skip
# to the next file when a split package is found, and output
# dependencies on stdout.
gendeps() {
    xargs -0i awk -v FS='[<=>]' '
          /pkgbase/                     {base = $2; print $2, $2}
          /^\t(make|check)?depends/     {print base, $2}
          /^$/                          {nextfile}
    ' {}
}

allnames() {
    xargs -0i awk -v FS='[<=>]' '
          /pkgbase/ {base = $2}
          /pkgname/ {print $2, base}
    ' {}
}

# Validate tsort data (#87)
dmsort() {
    if datamash -W check < "$1" >/dev/null; then
        tsort "$1" | tac
    else
        error "$argv0: invalid argument"
        exit 22
    fi
}

trap 'rm -rf "$tmp"' EXIT

source /usr/share/makepkg/util.sh || exit

if ((!$#)); then
    error "usage: $argv0 pkgbase [pkgbase...]"
    exit 1
fi

[[ -t 2 ]] && colorize

if findsrc "$@" | tee >(allnames > "$tmp"/base) | gendeps > "$tmp"/all; then
    # pkgbase can be specified explicitely, and does not have to match
    # values in the pkgname array. As source directories are however
    # named after pkgbase, differences must be replaced in the initial
    # graph before matching the original arguments.
    dmsort "$tmp"/all | aursplit "$tmp"/base > "$tmp"/queue

    # The base assumption is to have packages and their dependencies
    # already available, so instead of filtering packages in the official
    # repositories, we simply remove those that weren't there in the first
    # place. As an added benefit, any directory with SRCINFO files can now
    # be included in the queue.
    grep -Fxf <(printf '%s\n' "$@") "$tmp"/queue
fi
