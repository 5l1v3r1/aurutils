#!/bin/bash
# shellcheck disable=SC2016
PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
set -o pipefail

argv0=aurqueue
tmp=$(mktemp -dt "$argv0".XXXXXXXXXX) || exit

readonly PS4 argv0 tmp

# make/depends arrays contain pkgname instead of pkgbase.
# Replace entries accordingly in the output.
basesub() {
    declare -A pkg seen
    declare name base

    while read -r -u 3 name base; do
        pkg[$name]=$base
    done 3< "$1"

    while read -r name _; do
        base=${pkg[$name]}

        if [[ -n $base ]] && [[ -z ${seen[$base]} ]]; then
            printf '%s\n' "${pkg[$name]}"
            seen[$base]=1
        fi
    done
}

dmsort() {
    if hash datamash 2>/dev/null; then
        datamash -W check < "$1" >/dev/null || return
    fi

    tsort "$1"
}

trap_exit() {
    if [[ ! -o xtrace ]]; then
        rm -rf "$tmp"
    fi
}

trap 'trap_exit' EXIT

source /usr/share/makepkg/util.sh || exit

if ((!$#)); then
    error "usage: $argv0 pkgbase [pkgbase...]"
    exit 1
fi

[[ -t 2 ]] && colorize

find -- "$@" -maxdepth 1 -type f -name .SRCINFO -print0 > "$tmp"/i || exit

xargs -0i awk -v FS='[<=>]' '
    /pkgbase/                 {pb = $2; printf("%s\t%s\n", pb, pb);}
    /^\t(make|check)?depends/ {printf("%s\t%s\n", pb, $2);}
    /^$/                      {nextfile}    # split package
' {} < "$tmp"/i > "$tmp"/deps &

xargs -0i awk -v FS='[<=>]' '
    /pkgbase/ {pb = $2}
    /pkgname/ {printf("%s\t%s\n", $2, pb)}
' {} < "$tmp"/i > "$tmp"/base &

wait # XXX: exit code 0

dmsort "$tmp"/deps | basesub "$tmp"/base | grep -Fxf <(printf '%s\n' "$@") | tac

# vim: set et sw=4 sts=4 ft=sh:
