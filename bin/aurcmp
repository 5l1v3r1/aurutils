#!/bin/bash
#
# Read "pkgname pkgver" strings from stdin, find and compare
# repository versions, and print updated packages on stdout.
#
PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
argv0=aurcmp
declare -r PS4 argv0

prepare() {
    declare database=$1 root=$2 name ver res
    declare -A pkgset cmpset

    while read -r name ver; do
        pkgset[$name]=$ver
    done

    if [[ ${!pkgset[@]} ]]; then
        while read -r name ver; do
            if [[ ${pkgset[$name]} ]]; then
                cmpset[$name]=$ver
            fi
        done < <(repose --list --root="$root" "$database")
    else
        error "$argv0: no data available"
        exit 61
    fi

    for name in "${!pkgset[@]}"; do
        if [[ ${cmpset[$name]} ]]; then
            res=$(vercmp "${cmpset[$name]}" "${pkgset[$name]}")
        else
            res=-1 # FS#49093
        fi

        case $res in
            -1) msg2 "$name ${cmpset[$name]:-0} -> ${pkgset[$name]}" ;;
            0)  printf '%s\n' "$name" ;;
            1)  warning "$name ${cmpset[$name]:-0} is newer than ${pkgset[$name]}"
                printf '%s\n' "$name" ;;
        esac
    done
}

usage() {
    plain "usage: $argv0 [-r root] -d repository"
    exit 1
}

source /usr/share/makepkg/util.sh || exit

if [[ -t 2 ]]; then
    colorize
fi

while getopts :d:r: OPT; do
    case $OPT in
        d) database=$OPTARG ;;
        r) root=$OPTARG ;;
        *) usage ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

if [[ ! $database ]]; then
    usage
fi

if [[ ! $root ]]; then
    root=$(pacconf --single --repo="$database" Server) || exit
    root=${root#*://}
fi

root=$(realpath -e -- "$root") || exit
prepare "$database" "$root"
